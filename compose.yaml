# compose version not docker version
version: "3.8"

services:
  api:
    depends_on:
      - db
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    # environment:
    #   VITE_API_URL: http://localhost:8000
    develop:
      # we specify the files to watch for changes
      watch:
        - path: ./package.json
          action: rebuild
        - path: ./package-lock.json
          action: rebuild
        - path: ./tsconfig.json
          action: rebuild
        - path: .
          target: /app
          action: sync

  # db container
  db:
    image: mongo:latest
    environment:
      DB_URI: mongodb+srv://raimanishthl08:gkdjiQyyd7p2ZfIV@cluster0.fglgie7.mongodb.net/

# define the volumes to be used by the services
volumes:
  node-api:
# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

